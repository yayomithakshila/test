name: Label & comment issues #the name of the workflow

on: # This action will trigger when an issue is reopened, opened, or closed, and when a pull request is opened.
  issues:
    types:
      - reopened
      - opened
      - closed
  pull_request:
    types:
      - opened

permissions: # Required global permissions for all jobs
  contents: read
  issues: write
  pull-requests: write

jobs: # The jobs that run in this workflow

  label_issues: # the first job is named as label_issues
    if: ${{ github.event_name == 'issues' && github.event.action != 'closed' }} # Only run on opened/reopened issues
    runs-on: ubuntu-latest # This job will run on the latest version of Ubuntu.
    permissions: # This job requires write access to issues in order to add labels and comment.
      issues: write
    steps: # The "steps" section contains the individual tasks that will be performed in this job.
      - name: attach label to issues # The name of the step
        uses: actions/github-script@v6 # This step uses the "actions/github-script" action to execute a script that adds labels to the issue.
        with:
          script: | # The script calls the GitHub REST API to add labels to the issue.
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["issue", "fix"]
            })
      - name: Comment on new issue #this is another step that comments on the issue 
        uses: peter-evans/create-or-update-comment@v1 # This step uses the "peter-evans/create-or-update-comment" action to create or update a comment on the issue.
        with:
          issue-number: ${{ github.event.issue.number }} # The issue number is obtained from the context of the event that triggered the action.
          body: | # The body of the comment is a message thanking the user for opening the issue.
           Thanks for opening this issue! We'll take a look as soon as possible.

# Comment on when an issue is closed
  issue_closed:
    if: ${{ github.event_name == 'issues' && github.event.action == 'closed' }} # Only run when an issue is closed
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Comment on closed issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… The issue is now resolved.'
            })

# Comment on when an users opens the first pull request 
  comment_on_first_pr:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }} # Only run on new PRs
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
      pull-requests: write
    steps:
      - name: Check PR count for the user
        id: pr_check
        uses: actions/github-script@v6
        with:
          script: |
            const result = await github.rest.search.issuesAndPullRequests({
              q: `is:pr author:${context.payload.pull_request.user.login} repo:${context.repo.owner}/${context.repo.repo}`
            });
            core.setOutput("pr_count", result.data.total_count);

      - name: Comment on first pull request
        if: ${{ steps.pr_check.outputs.pr_count == '1' }}
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸŽ‰ Congratulations on opening your first pull request!"
            })
